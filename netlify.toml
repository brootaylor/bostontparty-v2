##############################
# Build settings
##############################

[build]
  command = "npm run deploy:build"
  publish = "www"

  # Default site wide settings
  # https://docs.netlify.com/configure-builds/file-based-configuration/#post-processing
  # If skip_processing = true, all other settings are ignored
  [build.processing]
    skip_processing = false
  [build.processing.html]
    pretty_urls = true
  [build.processing.css]
    bundle = false
    minify = false
  [build.processing.js]
    bundle = false
    minify = false
  [build.processing.images]
    compress = true

# Build and deployment config for `production` environment
[context.production]
  command = "npm run deploy:build"

  [context.production.environment]
    GIT_LFS_ENABLED = "true"
    NODE_ENV = "production"
    NODE_VERSION = "16"
    TZ = "Europe/London"


##############################
# Netlify dev server (local)
##############################

# Dev settings: (Used when running local Netlify dev server)
[dev]
  # Declaring port for netlify dev server to use when running the `npm run watch` command
  port = 8888
  command = "npm run watch"
  # Points to directory where `_redirects` file lives
  publish = "src"


##############################
# Plugins
##############################

# 1. Optimize images as part of the Netlify build process. Optimizes PNG, JPEG, GIF and SVG file formats.
[[plugins]]
  package = "netlify-plugin-image-optim"

# 2. Generate a lighthouse report for every deploy
[[plugins]]
  package = "@netlify/plugin-lighthouse"

  [plugins.inputs.audits]
    # to audit a specific absolute url
    url = 'https://bostontparty.co.za'

  # optional, fails build when a category is below a threshold
  [plugins.inputs.thresholds]
    performance = 0.9
    accessibility = 0.9
    best-practices = 0.9
    seo = 0.9
    pwa = 0.9

# 3. Submit sitemap (automatically)
[[plugins]]
    package = "netlify-plugin-submit-sitemap"

    [plugins.inputs]

    # The base url of your site (optional, default = main URL set in Netlify)
    # baseUrl = "https://example.com"

    # Path to the sitemap URL (optional, default = /sitemap.xml)
    sitemapPath = "/sitemap.xml"

    # Enabled providers to submit sitemap to (optional, default = 'google', 'bing', 'yandex'). Possible providers are currently only 'google', 'bing', 'yandex'.
    providers = [
      "google",
      "bing",
      "yandex"
    ]


##############################
# Headers
##############################

# Headers (Global)
[[headers]]
  for = "/*"
  [headers.values]
    Content-Security-Policy = "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.netlify.com unpkg.com *.google.com *.google-analytics.com *.googletagmanager.com; style-src 'self' 'unsafe-inline' *.google.com *.google-analytics.com *.googletagmanager.com; object-src 'self'; img-src 'self' 'unsafe-inline' *.google.com *.google-analytics.com *.googletagmanager.com *.cloudfront.net"
    Referrer-Policy = "no-referrer, strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "SAMEORIGIN"
    X-XSS-Protection = "1; mode=block"

# Header for .ico files
[[headers]]
  for = "/*.ico"
  [headers.values]
    Content-Type = "image/x-icon"

# Header for 'normal' JS
[[headers]]
  for = "/*.js"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"

# Header for ES6 Modules
[[headers]]
  for = "/*.mjs"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"

# Header for JSON
[[headers]]
  for = "/*.json"
  [headers.values]
    Content-Type = "application/json; charset=utf-8"


## ########################################################################
# Redirect rule to point temporary Netlify URL to preferred domain name
# ========================================================================
# NOTE: This requires the DNS records to be updated to point to Netlify.
[[redirects]]
  from = "https://bostontparty-v2.netlify.app/*"
  to = "https://bostontparty.co.za/:splat"
  status = 301

# ########################################################################
# Site-specific page redirects
# ========================================================================
# 404 pages
[[redirects]]
  from = "/*"
  to = "/error/404"
  status = 404
